package com.common.security.domain.model;

import java.util.HashSet;
import java.util.Set;

import org.apache.commons.collections.CollectionUtils;
import org.apache.commons.collections.Predicate;

/* Generated by Together */

public class Profile extends Temporal implements PermissionDefinition {

	private static final long serialVersionUID = -4402076175934012572L;

	private Set<Role> roles;

	private String name;

	private String abbreviation;

	private System system;

	public System getSystem() {
		return system;
	}

	public void setSystem(System system) {
		this.system = system;
	}

	public String getAbbreviation() {
		return abbreviation;
	}

	public void setAbbreviation(String abbreviation) {
		this.abbreviation = abbreviation;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public Set<Role> getRoles() {
		return roles;
	}

	public void setRoles(Set<Role> roles) {
		this.roles = roles;
	}

	public Set<Access> accessControlList() {
		Set<Access> accessList = new HashSet<Access>();
		// Si el profile esta vigente, agrega los accesos para sus roles vigentes.
		if (isValid()) {
			for (Role role : this.getRoles()) {
				accessList.addAll(role.accessControlList());
			}
		}
		return accessList;
	}

	public boolean hasAuthority(final String auth) {
		return CollectionUtils.find(accessControlList(), new Predicate() {
			public boolean evaluate(Object input) {
				Access a = (Access) input;
				return a.getAuthority().equals(auth);
			}
		}) != null;
	}
}
